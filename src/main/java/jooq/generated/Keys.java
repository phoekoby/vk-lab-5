/*
 * This file is generated by jOOQ.
 */
package generated;


import generated.tables.*;
import generated.tables.records.*;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<InvoiceRecord> INVOICE_PKEY = Internal.createUniqueKey(Invoice.INVOICE, DSL.name("invoice_pkey"), new TableField[] { Invoice.INVOICE.ID }, true);
    public static final UniqueKey<InvoicePositionRecord> INVOICE_POSITION_PKEY = Internal.createUniqueKey(InvoicePosition.INVOICE_POSITION, DSL.name("invoice_position_pkey"), new TableField[] { InvoicePosition.INVOICE_POSITION.ID }, true);
    public static final UniqueKey<OrganizationRecord> ORGANIZATION_PKEY = Internal.createUniqueKey(Organization.ORGANIZATION, DSL.name("organization_pkey"), new TableField[] { Organization.ORGANIZATION.ID }, true);
    public static final UniqueKey<ProductRecord> PRODUCT_PKEY = Internal.createUniqueKey(Product.PRODUCT, DSL.name("product_pkey"), new TableField[] { Product.PRODUCT.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<InvoiceRecord, OrganizationRecord> INVOICE__INVOICE_SENDER_ID_FKEY = Internal.createForeignKey(Invoice.INVOICE, DSL.name("invoice_sender_id_fkey"), new TableField[] { Invoice.INVOICE.SENDER_ID }, Keys.ORGANIZATION_PKEY, new TableField[] { Organization.ORGANIZATION.ID }, true);
    public static final ForeignKey<InvoicePositionRecord, InvoiceRecord> INVOICE_POSITION__INVOICE_POSITION_INVOICE_ID_FKEY = Internal.createForeignKey(InvoicePosition.INVOICE_POSITION, DSL.name("invoice_position_invoice_id_fkey"), new TableField[] { InvoicePosition.INVOICE_POSITION.INVOICE_ID }, Keys.INVOICE_PKEY, new TableField[] { Invoice.INVOICE.ID }, true);
    public static final ForeignKey<InvoicePositionRecord, ProductRecord> INVOICE_POSITION__INVOICE_POSITION_PRODUCT_ID_FKEY = Internal.createForeignKey(InvoicePosition.INVOICE_POSITION, DSL.name("invoice_position_product_id_fkey"), new TableField[] { InvoicePosition.INVOICE_POSITION.PRODUCT_ID }, Keys.PRODUCT_PKEY, new TableField[] { Product.PRODUCT.ID }, true);
}
