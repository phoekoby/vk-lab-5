/*
 * This file is generated by jOOQ.
 */
package generated.tables.records;


import generated.tables.Invoice;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDate;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvoiceRecord extends UpdatableRecordImpl<InvoiceRecord> implements Record4<Long, Long, LocalDate, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.invoice.id</code>.
     */
    public InvoiceRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.invoice.number</code>.
     */
    public InvoiceRecord setNumber(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice.number</code>.
     */
    public Long getNumber() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.invoice.invoice_date</code>.
     */
    public InvoiceRecord setInvoiceDate(LocalDate value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice.invoice_date</code>.
     */
    public LocalDate getInvoiceDate() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>public.invoice.sender_id</code>.
     */
    public InvoiceRecord setSenderId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice.sender_id</code>.
     */
    public Long getSenderId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, LocalDate, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, LocalDate, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Invoice.INVOICE.ID;
    }

    @Override
    public Field<Long> field2() {
        return Invoice.INVOICE.NUMBER;
    }

    @Override
    public Field<LocalDate> field3() {
        return Invoice.INVOICE.INVOICE_DATE;
    }

    @Override
    public Field<Long> field4() {
        return Invoice.INVOICE.SENDER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getNumber();
    }

    @Override
    public LocalDate component3() {
        return getInvoiceDate();
    }

    @Override
    public Long component4() {
        return getSenderId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getNumber();
    }

    @Override
    public LocalDate value3() {
        return getInvoiceDate();
    }

    @Override
    public Long value4() {
        return getSenderId();
    }

    @Override
    public InvoiceRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public InvoiceRecord value2(Long value) {
        setNumber(value);
        return this;
    }

    @Override
    public InvoiceRecord value3(LocalDate value) {
        setInvoiceDate(value);
        return this;
    }

    @Override
    public InvoiceRecord value4(Long value) {
        setSenderId(value);
        return this;
    }

    @Override
    public InvoiceRecord values(Long value1, Long value2, LocalDate value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InvoiceRecord
     */
    public InvoiceRecord() {
        super(Invoice.INVOICE);
    }

    /**
     * Create a detached, initialised InvoiceRecord
     */
    public InvoiceRecord(Long id, Long number, LocalDate invoiceDate, Long senderId) {
        super(Invoice.INVOICE);

        setId(id);
        setNumber(number);
        setInvoiceDate(invoiceDate);
        setSenderId(senderId);
    }

    /**
     * Create a detached, initialised InvoiceRecord
     */
    public InvoiceRecord(generated.tables.pojos.Invoice value) {
        super(Invoice.INVOICE);

        if (value != null) {
            setId(value.getId());
            setNumber(value.getNumber());
            setInvoiceDate(value.getInvoiceDate());
            setSenderId(value.getSenderId());
        }
    }
}
