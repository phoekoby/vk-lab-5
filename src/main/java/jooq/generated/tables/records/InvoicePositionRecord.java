/*
 * This file is generated by jOOQ.
 */
package generated.tables.records;


import generated.tables.InvoicePosition;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvoicePositionRecord extends UpdatableRecordImpl<InvoicePositionRecord> implements Record5<Long, Double, Long, Integer, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.invoice_position.id</code>.
     */
    public InvoicePositionRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice_position.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.invoice_position.price</code>.
     */
    public InvoicePositionRecord setPrice(Double value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice_position.price</code>.
     */
    public Double getPrice() {
        return (Double) get(1);
    }

    /**
     * Setter for <code>public.invoice_position.product_id</code>.
     */
    public InvoicePositionRecord setProductId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice_position.product_id</code>.
     */
    public Long getProductId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.invoice_position.amount</code>.
     */
    public InvoicePositionRecord setAmount(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice_position.amount</code>.
     */
    public Integer getAmount() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.invoice_position.invoice_id</code>.
     */
    public InvoicePositionRecord setInvoiceId(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice_position.invoice_id</code>.
     */
    public Long getInvoiceId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Double, Long, Integer, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Double, Long, Integer, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return InvoicePosition.INVOICE_POSITION.ID;
    }

    @Override
    public Field<Double> field2() {
        return InvoicePosition.INVOICE_POSITION.PRICE;
    }

    @Override
    public Field<Long> field3() {
        return InvoicePosition.INVOICE_POSITION.PRODUCT_ID;
    }

    @Override
    public Field<Integer> field4() {
        return InvoicePosition.INVOICE_POSITION.AMOUNT;
    }

    @Override
    public Field<Long> field5() {
        return InvoicePosition.INVOICE_POSITION.INVOICE_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Double component2() {
        return getPrice();
    }

    @Override
    public Long component3() {
        return getProductId();
    }

    @Override
    public Integer component4() {
        return getAmount();
    }

    @Override
    public Long component5() {
        return getInvoiceId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Double value2() {
        return getPrice();
    }

    @Override
    public Long value3() {
        return getProductId();
    }

    @Override
    public Integer value4() {
        return getAmount();
    }

    @Override
    public Long value5() {
        return getInvoiceId();
    }

    @Override
    public InvoicePositionRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public InvoicePositionRecord value2(Double value) {
        setPrice(value);
        return this;
    }

    @Override
    public InvoicePositionRecord value3(Long value) {
        setProductId(value);
        return this;
    }

    @Override
    public InvoicePositionRecord value4(Integer value) {
        setAmount(value);
        return this;
    }

    @Override
    public InvoicePositionRecord value5(Long value) {
        setInvoiceId(value);
        return this;
    }

    @Override
    public InvoicePositionRecord values(Long value1, Double value2, Long value3, Integer value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InvoicePositionRecord
     */
    public InvoicePositionRecord() {
        super(InvoicePosition.INVOICE_POSITION);
    }

    /**
     * Create a detached, initialised InvoicePositionRecord
     */
    public InvoicePositionRecord(Long id, Double price, Long productId, Integer amount, Long invoiceId) {
        super(InvoicePosition.INVOICE_POSITION);

        setId(id);
        setPrice(price);
        setProductId(productId);
        setAmount(amount);
        setInvoiceId(invoiceId);
    }

    /**
     * Create a detached, initialised InvoicePositionRecord
     */
    public InvoicePositionRecord(generated.tables.pojos.InvoicePosition value) {
        super(InvoicePosition.INVOICE_POSITION);

        if (value != null) {
            setId(value.getId());
            setPrice(value.getPrice());
            setProductId(value.getProductId());
            setAmount(value.getAmount());
            setInvoiceId(value.getInvoiceId());
        }
    }
}
